/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http'
import { Observable } from 'rxjs'
import { filter, map } from 'rxjs/operators'
import { StrictHttpResponse } from '../../strict-http-response'
import { RequestBuilder } from '../../request-builder'

export interface GetCollections$Html$Params {
  /**
   * The format of the response. If no value is provided, the standard http
   * rules apply, i.e., the accept header is used to determine the format.
   *
   * Pre-defined values are "json" and "html". The response to other
   * values is determined by the server.
   */
  f?: 'json' | 'html'
}

export function getCollections$Html(
  http: HttpClient,
  rootUrl: string,
  params?: GetCollections$Html$Params,
  context?: HttpContext
): Observable<StrictHttpResponse<string>> {
  const rb = new RequestBuilder(rootUrl, getCollections$Html.PATH, 'get')
  if (params) {
    rb.query('f', params.f, { style: 'form', explode: false })
  }

  return http.request(rb.build({ responseType: 'text', accept: 'text/html', context })).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<string>
    })
  )
}

getCollections$Html.PATH = '/collections'
