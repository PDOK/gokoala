/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http'
import { Observable } from 'rxjs'
import { filter, map } from 'rxjs/operators'
import { StrictHttpResponse } from '../../strict-http-response'
import { RequestBuilder } from '../../request-builder'

export interface GetOpenApi$Params {
  /**
   * The optional f parameter indicates the output format that the server shall provide as part of the response document.  The default format is JSON.
   */
  f?: 'json' | 'html'
}

export function getOpenApi(
  http: HttpClient,
  rootUrl: string,
  params?: GetOpenApi$Params,
  context?: HttpContext
): Observable<StrictHttpResponse<void>> {
  const rb = new RequestBuilder(rootUrl, getOpenApi.PATH, 'get')
  if (params) {
    rb.query('f', params.f, { style: 'form', explode: false })
  }

  return http.request(rb.build({ responseType: 'text', accept: '*/*', context })).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return (r as HttpResponse<any>).clone({ body: undefined }) as StrictHttpResponse<void>
    })
  )
}

getOpenApi.PATH = '/api'
