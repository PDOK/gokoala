/**
 * PDOK Location API
 * PDOK Location API enables searching for features over multiple datasets
 *
 * OpenAPI spec version: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Extent } from '../models/Extent'
import { Keyword } from '../models/Keyword'
import { Link } from '../models/Link'
import { HttpFile } from '../http/http'

export class Collection {
  /**
   * The provider of the source data for the collection.
   */
  'attribution'?: string
  /**
   * The list of coordinate reference systems supported by the service. The first item is the default coordinate reference system.
   */
  'crs'?: Array<string>
  /**
   * a description of the collection
   */
  'description'?: string
  'extent'?: Extent
  /**
   * identifier of the collection used, for example, in URIs
   */
  'id': string
  /**
   * keywords about the elements in the collection
   */
  'keywords'?: Array<Keyword>
  'links': Array<Link>
  /**
   * human readable title of the collection
   */
  'title'?: string

  static readonly discriminator: string | undefined = undefined

  static readonly mapping: { [index: string]: string } | undefined = undefined

  static readonly attributeTypeMap: Array<{ name: string; baseName: string; type: string; format: string }> = [
    {
      name: 'attribution',
      baseName: 'attribution',
      type: 'string',
      format: '',
    },
    {
      name: 'crs',
      baseName: 'crs',
      type: 'Array<string>',
      format: '',
    },
    {
      name: 'description',
      baseName: 'description',
      type: 'string',
      format: '',
    },
    {
      name: 'extent',
      baseName: 'extent',
      type: 'Extent',
      format: '',
    },
    {
      name: 'id',
      baseName: 'id',
      type: 'string',
      format: '',
    },
    {
      name: 'keywords',
      baseName: 'keywords',
      type: 'Array<Keyword>',
      format: '',
    },
    {
      name: 'links',
      baseName: 'links',
      type: 'Array<Link>',
      format: '',
    },
    {
      name: 'title',
      baseName: 'title',
      type: 'string',
      format: '',
    },
  ]

  static getAttributeTypeMap() {
    return Collection.attributeTypeMap
  }

  public constructor() {}
}
