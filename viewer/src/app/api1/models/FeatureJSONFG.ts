/**
 * PDOK Location API
 * PDOK Location API enables searching for features over multiple datasets
 *
 * OpenAPI spec version: 0.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { FeatureGeoJSONId } from '../models/FeatureGeoJSONId'
import { GeometryGeoJSON } from '../models/GeometryGeoJSON'
import { Link } from '../models/Link'
import { HttpFile } from '../http/http'

export class FeatureJSONFG {
  'bbox': Array<number> | null
  'conformsTo'?: Array<string>
  'coordRefSys'?: string
  'geometry': GeometryGeoJSON | null
  'id'?: FeatureGeoJSONId
  'links'?: Array<Link>
  'place': GeometryGeoJSON | null
  'properties': any | null
  'time': any | null
  'type': FeatureJSONFGTypeEnum

  static readonly discriminator: string | undefined = undefined

  static readonly mapping: { [index: string]: string } | undefined = undefined

  static readonly attributeTypeMap: Array<{ name: string; baseName: string; type: string; format: string }> = [
    {
      name: 'bbox',
      baseName: 'bbox',
      type: 'Array<number>',
      format: '',
    },
    {
      name: 'conformsTo',
      baseName: 'conformsTo',
      type: 'Array<string>',
      format: 'uri',
    },
    {
      name: 'coordRefSys',
      baseName: 'coordRefSys',
      type: 'string',
      format: 'uri',
    },
    {
      name: 'geometry',
      baseName: 'geometry',
      type: 'GeometryGeoJSON',
      format: '',
    },
    {
      name: 'id',
      baseName: 'id',
      type: 'FeatureGeoJSONId',
      format: '',
    },
    {
      name: 'links',
      baseName: 'links',
      type: 'Array<Link>',
      format: '',
    },
    {
      name: 'place',
      baseName: 'place',
      type: 'GeometryGeoJSON',
      format: '',
    },
    {
      name: 'properties',
      baseName: 'properties',
      type: 'any',
      format: '',
    },
    {
      name: 'time',
      baseName: 'time',
      type: 'any',
      format: '',
    },
    {
      name: 'type',
      baseName: 'type',
      type: 'FeatureJSONFGTypeEnum',
      format: '',
    },
  ]

  static getAttributeTypeMap() {
    return FeatureJSONFG.attributeTypeMap
  }

  public constructor() {}
}

export enum FeatureJSONFGTypeEnum {
  Feature = 'Feature',
}
